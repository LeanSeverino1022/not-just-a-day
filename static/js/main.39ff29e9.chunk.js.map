{"version":3,"sources":["Todo.js","TodoList.js","data.js","TwitterButton.js","HeaderButtons.js","Pomodoro.js","App.js","index.js"],"names":["Todo","todo","toggleTodo","order","index","taskPriorityUI","className","handleTodoStatus","id","draggableId","provided","style","background","ref","innerRef","draggableProps","dragHandleProps","type","checked","complete","onChange","name","TodoList","todos","map","idx","key","todoItems","TwitterButton","href","HeaderButtons","React","useRef","useEffect","_","document","addEventListener","window","twttr","events","bind","event","getElementById","textContent","Pomodoro","useState","startingMinutes","totalSeconds","setTotalSeconds","timerUi","setTimerUI","isTimerRunning","setIsTimerRunning","resetTimer","alert","continueCountdown","interval","setInterval","clearInterval","time","numSeconds","minutesDisplay","Math","floor","secondsDisplay","convertSecondsToMinutesSecondsText","onClick","App","todosData","setTodos","todoNameRef","addTodoItem","current","value","trim","prevTodos","uuidv4","focus","newTodos","find","JSON","parse","localStorage","getItem","setItem","stringify","onDragEnd","result","destination","source","new_todos","list","startIndex","endIndex","Array","from","splice","removed","reorder","droppableId","droppableProps","placeholder","onKeyUp","e","autoFocus","leftTodo","filter","length","renderLeftTodoText","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.39ff29e9.chunk.js","sourcesContent":["import React from 'react'\nimport { Draggable } from \"react-beautiful-dnd\";\n\nfunction Todo({todo, toggleTodo, order, index}) {\n\n    const taskPriorityUI =  order > 2 ? <span className=\"p-1 text-red-900 ml-auto\">Add to Top 3</span> : <span className=\"p-1 text-red-900 ml-auto\">Remove from Top 3</span>\n\n    function handleTodoStatus() {\n        toggleTodo(todo.id);\n    }\n\n    return (\n        <Draggable draggableId={todo.id} index={index}>\n            {(provided) => (\n                <div\n                    style={{ background: \"#000\" }}\n                    ref={provided.innerRef}\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                >\n                    <label className=\"flex items-center \">\n                        <input type=\"checkbox\" checked={todo.complete} onChange={handleTodoStatus} />\n                        <span className=\"text-2xl ml-2\">{todo.name}</span>\n                        {taskPriorityUI}\n                    </label>\n                </div>\n            )}    \n        </Draggable>\n    );\n}\n\nexport default Todo;\n","import React from 'react';\nimport Todo from './Todo.js'\n\n\nexport default function TodoList({ todos, toggleTodo }) {\n    return (\n        <div>\n            {todos.map( (todo, idx) => {\n                return <Todo key={todo.id} todo={todo} toggleTodo={toggleTodo} order={idx} index={idx}/>\n            })}\n        </div>\n\n    )\n}\n","const todoItems = [\n    {\n      id: 1,\n      name: \"finish this project!!\",\n      complete: true\n    },\n    {\n      id: 2,\n      name: \"Get excited\",\n      complete: false\n    }\n  ];\n\n  export default todoItems;","import React from 'react'\n\n\nexport default function TwitterButton() {\n\n\n    return (\n        /* I just used the twitter-share-button to easily generate the url I need then I manually create my own tweet button */\n\n        <div className=\"block headerBtn text-center\">\n            <a href=\"https://twitter.com/intent/tweet?hashtags=dayatatime&original_referer=http%3A%2F%2Flocalhost%3A3003%2Fnot-just-a-day&ref_src=twsrc%5Etfw&text=Day%20of%20%23100DaysOfCode%2C%20%0A%20Today&tw_p=tweetbutton&url=https%3A%2F%2Fleanseverino1022.github.io%2Fnot-just-a-day%2F\">#100DaysOfCode</a></div>\n    //      <a className=\"twitter-share-button\"\n    //         href=\"https://twitter.com/intent/tweet\"\n    //         data-size=\"large\"\n    //         data-text={`Day of #100DaysOfCode, \\n Today`}\n    //         data-url=\"https://leanseverino1022.github.io/not-just-a-day/\"\n    //         data-hashtags=\"dayatatime\">\n    //     </a>\n    )\n}\n","import React from 'react';\nimport TwitterButton from './TwitterButton';\n\nexport default function HeaderButtons() {\n    // eval(\"debugger;\")\n\n    const hiddenTwitterBtnRef = React.useRef(null);\n\n    React.useEffect(_=>{\n\n        //wait for external script  widget.js to load\n        document.addEventListener(\"load\", () => {\n            window.twttr.events.bind(\n                'loaded',\n                function (event) {\n                  // Do something there\n                  document.getElementById('l').textContent = \"tt\";\n                }\n              );\n        })\n\n    }, [])\n\n    function handleTweetBtnClick() {\n        document.querySelector('.twitter-share-button').click();\n        // alert('x')\n    }\n\n    return (\n        <div className=\"flex\">\n            {/* buttons */}\n            <div className=\"headerBtn bg-green-700 w-1/5\">\n                <TwitterButton />\n            </div>\n\n            <div className=\"headerBtn bg-red-500 w-1/5\">Test 1</div>\n            <div className=\"headerBtn bg-yellow-500 w-1/5\">Test 2</div>\n            <div className=\"headerBtn bg-blue-500 w-1/5\">Test 3</div>\n            <div className=\"headerBtn bg-yellow-500 w-1/5\">Test 2</div>\n\n\n        </div>\n\n    )\n}\n","import React, { useState, useEffect } from 'react'\n\nexport default function Pomodoro() {\n\n    const startingMinutes = .15;\n\n    let [totalSeconds, setTotalSeconds] = useState(startingMinutes * 60);\n    let [timerUi, setTimerUI] = useState(null);\n    let [isTimerRunning, setIsTimerRunning] = useState(false);\n\n\n    function startTimer() {\n\n        if (!isTimerRunning) {\n            setIsTimerRunning(true);\n        }\n    }\n\n    function resetTimer() {\n        stopTimer();\n        setTotalSeconds(startingMinutes * 60);\n        alert('reset')\n    }\n\n    function stopTimer() {\n        setIsTimerRunning(false);\n    }\n\n    /**\n     * convert seconds(num) to minutes:seconds(string)\n     */\n    function convertSecondsToMinutesSecondsText(numSeconds) {\n        //seconds to MM-SS format\n        const minutesDisplay = Math.floor(numSeconds / 60);\n        numSeconds = (numSeconds % 60);\n        const secondsDisplay = numSeconds < 10 ? '0' + numSeconds : numSeconds;\n\n        return `${minutesDisplay}:${secondsDisplay}`;\n    }\n\n    function continueCountdown() {\n\n        if (totalSeconds < 1) {\n            alert(\"TIMES UP\");\n            resetTimer();\n            return;\n        }\n\n        setTotalSeconds(--totalSeconds);\n    }\n\n\n    useEffect(_ => {\n        const interval = isTimerRunning && setInterval(continueCountdown, 1000);\n        return () => clearInterval(interval);\n    }, [isTimerRunning])\n\n\n    useEffect(_ => {\n        const time = convertSecondsToMinutesSecondsText(totalSeconds)\n        setTimerUI(time);\n    }, [totalSeconds])\n\n\n    return (\n        <div>\n            <div className=\"flex text-center border flex-wrap\">\n                <div className=\"flex-grow flex flex-col w-full\">\n                    <p className=\"py-2\">Pomodoro Timer</p>\n                    <p className=\"text-6xl\">{timerUi}</p>\n                    {isTimerRunning ? (\n                        <button onClick={resetTimer} className=\"bg-gray-700 hover:bg-gray-600 text-white inline-block mx-auto mb-2 py-1 px-2\">Reset</button>\n                    ) : (\n                            <button onClick={startTimer} className=\"bg-green-500 hover:bg-green-700 text-white inline-block mx-auto mb-2 py-1 px-2\" >Start</button>\n                        )}\n                </div>\n\n                <div className=\"flex-grow flex flex-col\">\n                    <p>Cycles</p>\n                    <p>0</p>\n                    <button>Reset</button>\n                </div>\n\n                <div className=\"flex-grow flex flex-col\">\n                    <p>Break</p>\n                    <p>5:00</p>\n                    <button>Start</button>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, { useState, useRef, useEffect } from 'react';\nimport TodoList from './TodoList';\nimport todosData from './data';\nimport HeaderButtons from './HeaderButtons';\nimport Pomodoro from './Pomodoro';\nimport { v4 as uuidv4 } from 'uuid';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\n\nconst LOCAL_STORAGE_KEY = 'oneDayApp.todos';\n\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n};\n\nfunction App() {\n  const [todos, setTodos] = useState(todosData);\n\n  const todoNameRef = useRef(null);\n\n  //do once, when our component loads\n  //set storedTodos data from local storage if it exists\n  useEffect(_ => {\n    const storedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n\n    // if (storedTodos) setTodos(storedTodos);\n\n  }, [])\n\n  //when something changes, do something\n  useEffect(_ => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\n  }, [todos])\n\n\n  function addTodoItem() {\n\n    const name = todoNameRef.current.value.trim();\n    if (name === '') return;\n\n    setTodos(prevTodos => {\n      return [...prevTodos, { name: name, id: uuidv4(), complete: false }];\n    });\n\n    todoNameRef.current.value = '';\n    todoNameRef.current.focus();\n  }\n\n  // DND\n  function onDragEnd(result) {\n    \n    if (!result.destination) {\n      return;\n    }\n\n    if (result.destination.index === result.source.index) {\n      return;\n    }\n\n    const new_todos = reorder(\n      todos,\n      result.source.index,\n      result.destination.index\n    );\n\n    setTodos( new_todos );\n  }\n\n  function toggleTodo(id) {\n    const newTodos = [...todos];\n    const todo = newTodos.find(todo => todo.id === id);\n    todo.complete = !todo.complete;\n    setTodos(newTodos);\n  }\n\n  function triggerAddTodo(e) {\n    //what would trigger the addTodoItem\n    if (e.key === 'Enter') {\n      addTodoItem();\n    }\n  }\n\n  function clearTodos() {\n    const newTodos = todos.filter(todo => !todo.complete);\n\n    setTodos(newTodos);\n  }\n\n  function renderLeftTodoText() {\n    debugger;\n    const leftTodo = [...todos].filter(todo => !todo.complete).length;\n\n    return leftTodo ? leftTodo + ' left to do' : \"All done! Great job!\";\n  }\n\n  return (\n    <>\n      <div className=\"page-bg\"></div>\n\n      <div className=\"bg-green-600 h-screen flex flex-col\">\n\n        <div className=\"w-full\">\n          <HeaderButtons />\n        </div>\n        <div className=\"bg-gray-700 flex-grow flex\">\n\n          {/* column todolist */}\n          <div className=\"w-1/4 flex-grow flex flex-col bg-green-500\">\n            <div className=\"border-2 p-4 flex-grow bg-white\">\n              <DragDropContext onDragEnd={onDragEnd}>\n                <Droppable droppableId=\"list\">\n                  {(provided) => (\n                    <div ref={provided.innerRef} {...provided.droppableProps}>\n                      <TodoList todos={todos} toggleTodo={toggleTodo} />\n                      {provided.placeholder}\n                    </div>\n                  )}\n                </Droppable>\n              </DragDropContext>\n              <div className=\"flex mt-4 mb-8\">\n                <input onKeyUp={triggerAddTodo} className=\"border py-2 px-3 text-grey-dark mr-2 w-full\" placeholder=\"What essential thing you need to do?\" autoFocus={true} type='text' ref={todoNameRef} />\n                <button className=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded mr-2\" onClick={addTodoItem}>Add</button>\n              </div>\n\n              <div>{renderLeftTodoText()}  <button className=\"ml-4 bg-orange-500 hover:bg-orange-700 text-white font-bold px-1 rounded mr-2\" onClick={clearTodos}>Clear Completed Todos</button></div>\n            </div>\n          </div>\n\n          <div className=\"w-1/4 flex flex-col\">\n            <div className=\"border-white mr-1 mb-1 bg-primary\" >\n              <Pomodoro />\n            </div>\n            <div className=\"flex-grow border-white mr-1 mb-1 bg-secondary\" ></div>\n            <div className=\"flex-grow border-white mr-1 bg-primary\" ></div>\n          </div>\n\n          <div className=\"w-1/4 flex flex-col\">\n            <div className=\"flex-grow border-white mb-1 bg-secondary\" ></div>\n            <div className=\"flex-grow border-white mb-1 bg-primary\" ></div>\n            <div className=\"flex-grow border-white bg-secondary\" ></div>\n          </div>\n\n          {/* <div className=\"w-1/4 flex flex-col bg-gray-300\"></div> */}\n\n        </div>\n\n      </div>\n\n\n\n\n    </>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/main.css';\nimport './assets/custom.css';\n\n\n// just uncomment ./DragDropTest.js to test out Drag and drop test of react-beautiful-dnd\n\nimport App from './App';\n// import App from './DragDropTest.js';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}