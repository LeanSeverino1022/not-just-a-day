{"version":3,"sources":["Todo.js","TodoList.js","data.js","TwitterButton.js","HeaderButtons.js","App.js","index.js"],"names":["Todo","todo","toggleTodo","taskPriorityUI","order","className","type","checked","complete","onChange","id","name","TodoList","todos","map","idx","key","todoItems","TwitterButton","href","HeaderButtons","React","useRef","useEffect","_","document","addEventListener","window","twttr","events","bind","event","getElementById","textContent","App","useState","todosData","setTodos","todoNameRef","addTodoItem","current","value","trim","prevTodos","uuidv4","focus","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","newTodos","find","onKeyUp","e","placeholder","autoFocus","ref","onClick","leftTodo","filter","length","renderLeftTodoText","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c255219e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Todo({todo, toggleTodo, order}) {\r\n\r\n    const taskPriorityUI =  order > 2 ? <span className=\"p-1 text-red-900 ml-auto\">Add to Top 3</span> : <span className=\"p-1 text-red-900 ml-auto\">Remove from Top 3</span>\r\n\r\n    function handleTodoStatus() {\r\n        toggleTodo(todo.id);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <label className=\"flex items-center \">\r\n                <input type=\"checkbox\" checked={todo.complete} onChange={handleTodoStatus} />\r\n                <span className=\"text-2xl ml-2\">{todo.name}</span>\r\n                { taskPriorityUI }\r\n\r\n           </label>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todo;\r\n","import React from 'react';\r\nimport Todo from './Todo.js'\r\n\r\n\r\nexport default function TodoList({ todos, toggleTodo }) {\r\n    return (\r\n        <div>\r\n            {todos.map( (todo, idx) => {\r\n                return <Todo key={todo.id} todo={todo} toggleTodo={toggleTodo} order={idx}/>\r\n            })}\r\n        </div>\r\n\r\n    )\r\n}\r\n","const todoItems = [\r\n    {\r\n      id: 1,\r\n      name: \"finish this project!!\",\r\n      complete: true\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Get excited\",\r\n      complete: false\r\n    }\r\n  ];\r\n\r\n  export default todoItems;","import React from 'react'\r\n\r\n\r\nexport default function TwitterButton() {\r\n\r\n\r\n    return (\r\n        /* I just used the twitter-share-button to easily generate the url I need then I manually create my own tweet button */\r\n\r\n        <div className=\"block headerBtn text-blue-700 bg-blue-200\">\r\n            <a href=\"https://twitter.com/intent/tweet?hashtags=dayatatime&original_referer=http%3A%2F%2Flocalhost%3A3003%2Fnot-just-a-day&ref_src=twsrc%5Etfw&text=Day%20of%20%23100DaysOfCode%2C%20%0A%20Today&tw_p=tweetbutton&url=https%3A%2F%2Fleanseverino1022.github.io%2Fnot-just-a-day%2F\">#100DaysOfCode</a></div>\r\n    //      <a className=\"twitter-share-button\"\r\n    //         href=\"https://twitter.com/intent/tweet\"\r\n    //         data-size=\"large\"\r\n    //         data-text={`Day of #100DaysOfCode, \\n Today`}\r\n    //         data-url=\"https://leanseverino1022.github.io/not-just-a-day/\"\r\n    //         data-hashtags=\"dayatatime\">\r\n    //     </a>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport TwitterButton from './TwitterButton';\r\n\r\nexport default function HeaderButtons() {\r\n    // eval(\"debugger;\")\r\n\r\n    const hiddenTwitterBtnRef = React.useRef(null);\r\n\r\n    React.useEffect(_=>{\r\n\r\n        //wait for external script  widget.js to load\r\n        document.addEventListener(\"load\", () => {\r\n            window.twttr.events.bind(\r\n                'loaded',\r\n                function (event) {\r\n                  // Do something there\r\n                  document.getElementById('l').textContent = \"tt\";\r\n                }\r\n              );\r\n        })\r\n\r\n    }, [])\r\n\r\n    function handleTweetBtnClick() {\r\n        document.querySelector('.twitter-share-button').click();\r\n        // alert('x')\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex p-2\">\r\n            {/* buttons */}\r\n            <div className=\"header-btns-container\">\r\n                <TwitterButton />\r\n            </div>\r\n\r\n            <div className=\"headerBtn bg-red-500\">Test 1</div>\r\n            <div className=\"headerBtn bg-yellow-500\">Test 2</div>\r\n            <div className=\"headerBtn bg-blue-500\">Test 3</div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport TodoList from './TodoList';\r\nimport todosData from './data';\r\nimport HeaderButtons from './HeaderButtons';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst LOCAL_STORAGE_KEY = 'oneDayApp.todos';\r\n\r\nfunction App () {\r\n  const [todos, setTodos] = useState(todosData);\r\n\r\n  const todoNameRef = useRef(null);\r\n\r\n  //do once, when our component loads\r\n  useEffect(_=>{\r\n    const storedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\r\n\r\n    if (storedTodos) setTodos(storedTodos);\r\n\r\n  }, [])\r\n\r\n  //when something changes, do something\r\n  useEffect(_=>{\r\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\r\n  }, [todos])\r\n\r\n\r\n  function addTodoItem () {\r\n\r\n    const name = todoNameRef.current.value.trim();\r\n    if (name === '') return;\r\n\r\n    setTodos(prevTodos => {\r\n        return [...prevTodos, { name: name, id:uuidv4 (), complete:false}];\r\n    });\r\n\r\n    todoNameRef.current.value = '';\r\n    todoNameRef.current.focus();\r\n  }\r\n\r\n  function toggleTodo(id) {\r\n    const newTodos = [...todos];\r\n    const todo = newTodos.find(todo => todo.id === id);\r\n    todo.complete = !todo.complete;\r\n    setTodos(newTodos);\r\n  }\r\n\r\n  function triggerAddTodo(e) {\r\n    //what would trigger the addTodoItem\r\n    if (e.key === 'Enter') {\r\n      addTodoItem();\r\n    }\r\n  }\r\n\r\n  function clearTodos () {\r\n    const newTodos = todos.filter(todo => !todo.complete);\r\n\r\n    setTodos( newTodos );\r\n  }\r\n\r\n  function renderLeftTodoText() {\r\n\r\n    const leftTodo = todos.filter( todo => !todo.complete).length;\r\n\r\n    return leftTodo ? leftTodo + ' left to do' : \"All done! Great job!\";\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <div className=\"page-bg\"></div>\r\n\r\n    <HeaderButtons/>\r\n\r\n    <div className=\"flex flex-col h-screen\">\r\n      <div className=\"border-2 p-4 w-full lg:w-1/4 lg:max-w-lg bg-gray-300 bg-opacity-75\">\r\n        <TodoList todos={todos} toggleTodo={toggleTodo}/>\r\n        <div className=\"flex mt-4 mb-8\">\r\n          <input onKeyUp={triggerAddTodo} className=\"border py-2 px-3 text-grey-dark mr-2 w-full\" placeholder=\"What essential thing you need to do?\" autoFocus={true} type='text' ref={todoNameRef} />\r\n          <button className=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded mr-2\" onClick={addTodoItem}>Add</button>\r\n        </div>\r\n\r\n        <div>{renderLeftTodoText()}  <button className=\"ml-4 bg-orange-500 hover:bg-orange-700 text-white font-bold px-1 rounded mr-2\" onClick={clearTodos}>Clear Completed Todos</button></div>\r\n       </div>{}\r\n    </div>\r\n\r\n\r\n\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './assets/main.css';\r\nimport './assets/custom.css';\r\n\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}